<!DOCTYPE html>

<html>
<head>
    <title>title</title>
</head>
<body>
@model WebApplication.Models.UserModel
<div class="logindiv">
    <h2>
        Please Login:
        </h2>
    @using (Html.BeginForm("TryLogin", "Home", FormMethod.Post))
    {
        <div>
            @Html.TextBoxFor(model => model.UserName,new { placeholder = "User Name",@class="inputclasslogin" })
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div>
            @Html.PasswordFor(model => model.Password,new { placeholder = "Password",@class="inputclasslogin" })
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <button class="btn btn-outline-primary" type="submit" formaction="TryLogin" value="Login">Login</button>

        <button style="margin-left: 5px" class="btn btn-outline-primary" type="submit" formaction="LoginAsSystemManager">Login As System Manager</button>
    }
</div>
</body>
</html>

@if (ViewBag.Alert!= null)  
{  
    <script type="text/javascript">  
            window.onload = function() {  
                alert("@ViewBag.Alert");  
            };  
        </script>  
} 

@section Scripts {
    <script src="~/js/signalr.js"></script>

    <script>
        let connection = new signalR.HubConnectionBuilder().withUrl("/notifications").build();
     
        connection.on('send', data => {
             alert(data)
        });
        
        connection.on('save', data => {
            alert(data)
        });
     
        connection.start().then(() => {
            console.log("connection started");
            connection.invoke('GetConnectionId').then(function (connectionId) {
                alert(connectionId);
            });
        });
     
        /*function sendMessage() {
          var msg = document.getElementById("txtMessage").value;
          connection.invoke('send', msg);
        }*/
      </script>
}