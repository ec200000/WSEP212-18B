@using Microsoft.AspNetCore.Http
@using WSEP212.DomainLayer
@using WSEP212.DomainLayer.SystemLoggers
@using WSEP212.ServiceLayer
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Add Predicate";
}
<!DOCTYPE html>

<html>
<head>
    <title>title</title>
</head>
<body>
<div class="purchasepredicatediv">
    @model WebApplication.Models.PredicateModel
    @try
    {
        @using (Html.BeginForm("TryAddPurchasePredicate", "Home", FormMethod.Post))
        {
            string name = HttpContextAccessor.HttpContext.Session.GetString("_Name");
            int store = (int) HttpContextAccessor.HttpContext.Session.GetInt32("_StoreID");
            @if (SystemController.Instance.hasPermission(name, store, Permissions.StorePoliciesManagement).getTag())
            {
                <h3>
                    Please fill in only one of the pridecates:
                </h3>
                @Html.TextBoxFor(model => model.numbersOfProducts, new {placeholder = "Numbers Of Products ShoppingBag from a particular product or category", @class = "inputclassindex"})
                @Html.TextBoxFor(model => model.priceOfShoppingBag, new {placeholder = "Price Of The ShoppingBag", @class = "inputclassindex"})
                @Html.TextBoxFor(model => model.ageOfUser, new {placeholder = "Age Of User", @class = "inputclassindex"})
                <button style="margin-left: 15px" class="btn btn-outline-primary" type="submit">Add purchase predicate</button>
            }
        }
    }
    catch (Exception e)
    {
         var msg = e.Message + " ";
         var inner = e.InnerException;
         if (inner != null)
         {
             msg += inner.Message;
         }
         Logger.Instance.writeErrorEventToLog(msg);
    }
    
</div>
</body>
</html>

@if (TempData["alert"] != null)
{
    <script type="text/javascript">  
            window.onload = function() {  
                alert("@TempData["alert"]");  
            };  
        </script>  
}
@section Scripts {
    <script src="~/js/signalr.js"></script>

    <script>
        let connection = new signalR.HubConnectionBuilder().withUrl("/notifications").build();

        connection.on('sendToUser', data => {
            alert(data)
        });

        connection.start().then(() => {
            console.log("connection started");
            connection.invoke('GetConnectionId').then(function (connectionId) {
                //alert(connectionId);
            });
        });
    </script>
}