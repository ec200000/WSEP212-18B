@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Shopping Cart";
}
<!DOCTYPE html>

<html>
<body>
<div class="shoppingcartremovediv">
    @model WebApplication.Models.ShoppingCartModel
    @using (Html.BeginForm("TryRemoveItemFromShoppingCart", "Home", FormMethod.Post))
    {
        <label for="storesList">Items List</label>
        string[] ItemsListAndStores = HttpContextAccessor.HttpContext.Session.GetObject<string[]>("shoppingCart");
        @Html.DropDownListFor(model => model.itemID, new SelectList(ItemsListAndStores.OfType<string>().ToList()), new {@class = "custom-select"});
        <button style="margin-top: 20px" class="btn btn-outline-primary" type="submit">Remove Item From Shopping Cart</button>
    }
</div>
<div class="shoppingcartpurchasediv">
    @using (Html.BeginForm("TryPriceAftereSale", "Home", FormMethod.Post))
    {
        <h3>Price Before sale:</h3>
        string finalPriceBeforeSale = HttpContextAccessor.HttpContext.Session.GetString("finalPriceBeforeSale");
        <h6>@finalPriceBeforeSale</h6>
    }
</div>
<div class="shoppingcartpurchasediv">
    @using (Html.BeginForm("TryPriceAftereSale", "Home", FormMethod.Post))
    {
        <h3>Price After sale:</h3>
        string finalPriceAfterSale = HttpContextAccessor.HttpContext.Session.GetString("finalPriceAfterSale");
        <h6>@finalPriceAfterSale</h6>
    }
</div>
<div class="shoppingcartpurchasediv">
    @using (Html.BeginForm("TrypurchaseItems", "Home", FormMethod.Post))
    {
        @Html.TextBoxFor(model => model.Address,new { placeholder = "Address",@class="inputclassindex" })
        <button style="margin-left: 15px" class="btn btn-outline-primary" type="submit">Purchase items</button>
    }
</div>
    </body>
</html>

@if (TempData["alert"] != null)
{
    <script type="text/javascript">  
            window.onload = function() {  
                alert("@TempData["alert"]");  
            };  
        </script>  
}

@section Scripts {
    <script src="~/js/signalr.js"></script>

    <script>
        let connection = new signalR.HubConnectionBuilder().withUrl("/notifications").build();
     
        connection.on('sendToUser', data => {
             alert(data)
        });
        
        connection.start().then(() => {
            console.log("connection started");
            connection.invoke('GetConnectionId').then(function (connectionId) {
                //alert(connectionId);
            });
        });
      </script>
}