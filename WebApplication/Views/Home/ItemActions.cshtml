@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Components.Web.Virtualization
@inject IHttpContextAccessor HttpContextAccessor
<!DOCTYPE html>

<html>
<head>
    <title>title</title>
</head>
<body>
<div class="itemactionsadddiv">
    @model WebApplication.Models.ItemModel
    @using (Html.BeginForm("TryAddItem", "Home", FormMethod.Post))
    {
        <div>
            @Html.EditorFor(model => model.quantity,new { htmlAttributes = new  {@class="inputclassitemactions" , @placeholder = "Quantity"}})
            @Html.ValidationMessageFor(model => model.quantity)
        </div>
        
        <div>
            @Html.TextBoxFor(model => model.itemName,new { placeholder = "Item name",@class="inputclassitemactions" })
            @Html.ValidationMessageFor(model => model.itemName)
        </div>
        
        <div>
            @Html.TextBoxFor(model => model.description,new { placeholder = "Description",@class="inputclassitemactions" })
            @Html.ValidationMessageFor(model => model.description)
        </div>
        
        <div>
            @Html.EditorFor(model => model.price,new { htmlAttributes = new  {@class="inputclassitemactions" , @placeholder = "Price"}})
            @Html.ValidationMessageFor(model => model.price)
        </div>
        
        <div>
            @Html.TextBoxFor(model => model.category,new { placeholder = "Category",@class="inputclassitemactions" })
            @Html.ValidationMessageFor(model => model.category)
        </div>
        
        <button class="btn btn-outline-primary" type="submit" type="submit">Add Item To Store</button>
    }
</div>
<div class="itemactionsremovediv">
    @using (Html.BeginForm("TryRemoveItem", "Home", FormMethod.Post))
    {
        <label for="storesList">Items List</label>
        string str = "items" + HttpContextAccessor.HttpContext.Session.GetInt32("_StoreID"); 
        int[] ItemsList = HttpContextAccessor.HttpContext.Session.GetObject<int[]>(str); 
        @Html.DropDownListFor(model => model.itemID, new SelectList(ItemsList.OfType<int>().ToList()), new {@class = "custom-select"});

        <button style="margin-top: 20px" class="btn btn-outline-primary" type="submit" type="submit">Remove Item From Store</button>
    }
</div>
<div class="itemactionseditdiv">
    @using (Html.BeginForm("EditItemDetails", "Home", FormMethod.Post))
    {
        <label for="storesList">Items List</label>
        string str = "items" + HttpContextAccessor.HttpContext.Session.GetInt32("_StoreID"); 
        int[] ItemsList = HttpContextAccessor.HttpContext.Session.GetObject<int[]>(str); 
        @Html.DropDownListFor(model => model.itemID, new SelectList(ItemsList.OfType<int>().ToList()), new {@class = "custom-select"});


        <button style="margin-top: 20px" class="btn btn-outline-primary" type="submit" type="submit">Edit Item's Details</button>
    }
</div>
</body>
</html>
@if (TempData["alert"] != null)  
{  
    <script type="text/javascript">  
                  window.onload = function() {  
                      alert("@TempData["alert"]");  
                  };  
          </script>  
} 

@section Scripts {
    <script src="~/js/signalr.js"></script>

    <script>
        let connection = new signalR.HubConnectionBuilder().withUrl("/notifications").build();
     
        connection.on('sendToUser', data => {
             alert(data)
        });
        
        connection.start().then(() => {
            console.log("connection started");
            connection.invoke('GetConnectionId').then(function (connectionId) {
                //alert(connectionId);
            });
        });
      </script>
}