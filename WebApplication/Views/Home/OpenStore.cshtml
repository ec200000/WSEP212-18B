<!DOCTYPE html>

<html>
<head>
    <title>title</title>
</head>
<body>
<div class="openstorediv">
    @model WebApplication.Models.StoreModel
    @using WSEP212.DomainLayer.SystemLoggers
    @try
    {
        @using (Html.BeginForm("TryOpenStore", "Home", FormMethod.Post))
        {
            <div>
                @Html.TextBoxFor(model => model.storeName,new { placeholder = "Store Name",@class="inputclassopenstore" })
                @Html.ValidationMessageFor(model => model.storeName)
            </div>
        
            <div>
                @Html.TextBoxFor(model => model.storeAddress,new { placeholder = "Store Address",@class="inputclassopenstore" })
                @Html.ValidationMessageFor(model => model.storeAddress)
            </div>
        
            <div>
                @Html.TextBoxFor(model => model.salesPolicy,new { placeholder = "Sales Policy",@class="inputclassopenstore" })
                @Html.ValidationMessageFor(model => model.salesPolicy)
            </div>
        
            <div>
                @Html.TextBoxFor(model => model.purchasePolicy,new { placeholder = "Purchase Policy",@class="inputclassopenstore" })
                @Html.ValidationMessageFor(model => model.purchasePolicy)
            </div>
        
            <button class="btn btn-outline-primary" type="submit">OpenStore</button>
        }
    }
    catch (Exception e)
    {
         var msg = e.Message + " ";
         var inner = e.InnerException;
         if (inner != null)
         {
             msg += inner.Message;
         }
         Logger.Instance.writeErrorEventToLog(msg);
    }
    
</div>
</body>
</html>

@if (TempData["alert"] != null)
{
    <script type="text/javascript">  
            window.onload = function() {  
                alert("@TempData["alert"]");  
            };  
        </script>  
}

@section Scripts {
    <script src="~/js/signalr.js"></script>

    <script>
        let connection = new signalR.HubConnectionBuilder().withUrl("/notifications").build();
     
        connection.on('sendToUser', data => {
             alert(data)
        });
        
        connection.start().then(() => {
            console.log("connection started");
            connection.invoke('GetConnectionId').then(function (connectionId) {
                //alert(connectionId);
            });
        });
      </script>
}