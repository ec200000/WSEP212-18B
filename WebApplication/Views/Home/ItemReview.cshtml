@{
    ViewData["Title"] = "Item Review";
}
<!DOCTYPE html>

<html>
<body>
@model WebApplication.Models.ReviewModel
@using WSEP212.DomainLayer.SystemLoggers
<div class="itemreviewdiv">
    @try
    {
        @using (Html.BeginForm("TryReviewItem", "Home", FormMethod.Post))
        {

            @Html.TextBoxFor(model => model.review, new {placeholder = "Your review...", @class = "inputclasslogin"})
            @Html.ValidationMessageFor(model => model.review)
            <button class="btn btn-outline-primary" type="submit">Review Item</button>
        }
    }
    catch (Exception e)
    {
        var msg = e.Message + " ";
        var inner = e.InnerException;
        if (inner != null)
        {
            msg += inner.Message;
        }
        Logger.Instance.writeErrorEventToLog(msg);
    }

</div>
</body>
</html>

@if (TempData["alert"] != null)
{
    <script type="text/javascript">  
            window.onload = function() {  
                alert("@TempData["alert"]");  
            };  
        </script>  
}

@section Scripts {
    <script src="~/js/signalr.js"></script>

    <script>
        let connection = new signalR.HubConnectionBuilder().withUrl("/notifications").build();
     
        connection.on('sendToUser', data => {
             alert(data)
        });
        
        connection.start().then(() => {
            console.log("connection started");
            connection.invoke('GetConnectionId').then(function (connectionId) {
                //alert(connectionId);
            });
        });
      </script>
}